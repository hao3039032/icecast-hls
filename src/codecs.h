#ifndef CODECS_H
#define CODECS_H

enum codec_type {
    CODEC_TYPE_UNKNOWN  = 0,
    CODEC_TYPE_AAC,
    CODEC_TYPE_ALAC,
    CODEC_TYPE_FLAC,
    CODEC_TYPE_MP3,
    CODEC_TYPE_OPUS,
    CODEC_TYPE_AC3,
    CODEC_TYPE_EAC3,
    /* everything after this is basically for decoding via avcodec */
    CODEC_TYPE_VORBIS,
    CODEC_TYPE_MP2,
    CODEC_TYPE_DTS,
    CODEC_TYPE_DVAUDIO,
    CODEC_TYPE_WMAV1,
    CODEC_TYPE_WMAV2,
    CODEC_TYPE_MACE3,
    CODEC_TYPE_MACE6,
    CODEC_TYPE_VMDAUDIO,
    CODEC_TYPE_MP3ADU,
    CODEC_TYPE_MP3ON4,
    CODEC_TYPE_SHORTEN,
    CODEC_TYPE_WESTWOOD_SND1,
    CODEC_TYPE_GSM,
    CODEC_TYPE_QDM2,
    CODEC_TYPE_COOK,
    CODEC_TYPE_TRUESPEECH,
    CODEC_TYPE_TTA,
    CODEC_TYPE_SMACKAUDIO,
    CODEC_TYPE_QCELP,
    CODEC_TYPE_WAVPACK,
    CODEC_TYPE_DSICINAUDIO,
    CODEC_TYPE_IMC,
    CODEC_TYPE_MUSEPACK7,
    CODEC_TYPE_MLP,
    CODEC_TYPE_GSM_MS,
    CODEC_TYPE_ATRAC3,
    CODEC_TYPE_APE,
    CODEC_TYPE_NELLYMOSER,
    CODEC_TYPE_MUSEPACK8,
    CODEC_TYPE_SPEEX,
    CODEC_TYPE_WMAVOICE,
    CODEC_TYPE_WMAPRO,
    CODEC_TYPE_WMALOSSLESS,
    CODEC_TYPE_ATRAC3P,
    CODEC_TYPE_SIPR,
    CODEC_TYPE_MP1,
    CODEC_TYPE_TWINVQ,
    CODEC_TYPE_TRUEHD,
    CODEC_TYPE_MP4ALS,
    CODEC_TYPE_ATRAC1,
    CODEC_TYPE_BINKAUDIO_RDFT,
    CODEC_TYPE_BINKAUDIO_DCT,
    CODEC_TYPE_AAC_LATM,
    CODEC_TYPE_QDMC,
    CODEC_TYPE_CELT,
    CODEC_TYPE_G723_1,
    CODEC_TYPE_G729,
    CODEC_TYPE_8SVX_EXP,
    CODEC_TYPE_8SVX_FIB,
    CODEC_TYPE_BMV_AUDIO,
    CODEC_TYPE_RALF,
    CODEC_TYPE_IAC,
    CODEC_TYPE_ILBC,
    CODEC_TYPE_COMFORT_NOISE,
    CODEC_TYPE_TAK,
    CODEC_TYPE_METASOUND,
    CODEC_TYPE_PAF_AUDIO,
    CODEC_TYPE_ON2AVC,
    CODEC_TYPE_DSS_SP,
    CODEC_TYPE_CODEC2,
    CODEC_TYPE_FFWAVESYNTH,
    CODEC_TYPE_SONIC,
    CODEC_TYPE_SONIC_LS,
    CODEC_TYPE_EVRC,
    CODEC_TYPE_SMV,
    CODEC_TYPE_DSD_LSBF,
    CODEC_TYPE_DSD_MSBF,
    CODEC_TYPE_DSD_LSBF_PLANAR,
    CODEC_TYPE_DSD_MSBF_PLANAR,
    CODEC_TYPE_4GV,
    CODEC_TYPE_INTERPLAY_ACM,
    CODEC_TYPE_XMA1,
    CODEC_TYPE_XMA2,
    CODEC_TYPE_DST,
    CODEC_TYPE_ATRAC3AL,
    CODEC_TYPE_ATRAC3PAL,
    CODEC_TYPE_DOLBY_E,
    CODEC_TYPE_APTX,
    CODEC_TYPE_APTX_HD,
    CODEC_TYPE_SBC,
    CODEC_TYPE_ATRAC9,
    CODEC_TYPE_HCOM,
    CODEC_TYPE_ACELP_KELVIN,
    CODEC_TYPE_MPEGH_3D_AUDIO,
    CODEC_TYPE_SIREN,
    CODEC_TYPE_HCA,
    CODEC_TYPE_FASTAUDIO,
    CODEC_TYPE_MSNSIREN,
    CODEC_TYPE_DFPWM,
    CODEC_TYPE_BONK,
    CODEC_TYPE_MISC4,
    CODEC_TYPE_APAC,
    CODEC_TYPE_FTR,
    CODEC_TYPE_WAVARC,
    CODEC_TYPE_RKA,
    CODEC_TYPE_PCM_S16LE,
    CODEC_TYPE_PCM_S16BE,
    CODEC_TYPE_PCM_U16LE,
    CODEC_TYPE_PCM_U16BE,
    CODEC_TYPE_PCM_S8,
    CODEC_TYPE_PCM_U8,
    CODEC_TYPE_PCM_MULAW,
    CODEC_TYPE_PCM_ALAW,
    CODEC_TYPE_PCM_S32LE,
    CODEC_TYPE_PCM_S32BE,
    CODEC_TYPE_PCM_U32LE,
    CODEC_TYPE_PCM_U32BE,
    CODEC_TYPE_PCM_S24LE,
    CODEC_TYPE_PCM_S24BE,
    CODEC_TYPE_PCM_U24LE,
    CODEC_TYPE_PCM_U24BE,
    CODEC_TYPE_PCM_S24DAUD,
    CODEC_TYPE_PCM_ZORK,
    CODEC_TYPE_PCM_S16LE_PLANAR,
    CODEC_TYPE_PCM_DVD,
    CODEC_TYPE_PCM_F32BE,
    CODEC_TYPE_PCM_F32LE,
    CODEC_TYPE_PCM_F64BE,
    CODEC_TYPE_PCM_F64LE,
    CODEC_TYPE_PCM_BLURAY,
    CODEC_TYPE_PCM_LXF,
    CODEC_TYPE_S302M,
    CODEC_TYPE_PCM_S8_PLANAR,
    CODEC_TYPE_PCM_S24LE_PLANAR,
    CODEC_TYPE_PCM_S32LE_PLANAR,
    CODEC_TYPE_PCM_S16BE_PLANAR,
    CODEC_TYPE_PCM_S64LE,
    CODEC_TYPE_PCM_S64BE,
    CODEC_TYPE_PCM_F16LE,
    CODEC_TYPE_PCM_F24LE,
    CODEC_TYPE_PCM_VIDC,
    CODEC_TYPE_PCM_SGA,
    CODEC_TYPE_ADPCM_IMA_QT,
    CODEC_TYPE_ADPCM_IMA_WAV,
    CODEC_TYPE_ADPCM_IMA_DK3,
    CODEC_TYPE_ADPCM_IMA_DK4,
    CODEC_TYPE_ADPCM_IMA_WS,
    CODEC_TYPE_ADPCM_IMA_SMJPEG,
    CODEC_TYPE_ADPCM_MS,
    CODEC_TYPE_ADPCM_4XM,
    CODEC_TYPE_ADPCM_XA,
    CODEC_TYPE_ADPCM_ADX,
    CODEC_TYPE_ADPCM_EA,
    CODEC_TYPE_ADPCM_G726,
    CODEC_TYPE_ADPCM_CT,
    CODEC_TYPE_ADPCM_SWF,
    CODEC_TYPE_ADPCM_YAMAHA,
    CODEC_TYPE_ADPCM_SBPRO_4,
    CODEC_TYPE_ADPCM_SBPRO_3,
    CODEC_TYPE_ADPCM_SBPRO_2,
    CODEC_TYPE_ADPCM_THP,
    CODEC_TYPE_ADPCM_IMA_AMV,
    CODEC_TYPE_ADPCM_EA_R1,
    CODEC_TYPE_ADPCM_EA_R3,
    CODEC_TYPE_ADPCM_EA_R2,
    CODEC_TYPE_ADPCM_IMA_EA_SEAD,
    CODEC_TYPE_ADPCM_IMA_EA_EACS,
    CODEC_TYPE_ADPCM_EA_XAS,
    CODEC_TYPE_ADPCM_EA_MAXIS_XA,
    CODEC_TYPE_ADPCM_IMA_ISS,
    CODEC_TYPE_ADPCM_G722,
    CODEC_TYPE_ADPCM_IMA_APC,
    CODEC_TYPE_ADPCM_VIMA,
    CODEC_TYPE_ADPCM_AFC,
    CODEC_TYPE_ADPCM_IMA_OKI,
    CODEC_TYPE_ADPCM_DTK,
    CODEC_TYPE_ADPCM_IMA_RAD,
    CODEC_TYPE_ADPCM_G726LE,
    CODEC_TYPE_ADPCM_THP_LE,
    CODEC_TYPE_ADPCM_PSX,
    CODEC_TYPE_ADPCM_AICA,
    CODEC_TYPE_ADPCM_IMA_DAT4,
    CODEC_TYPE_ADPCM_MTAF,
    CODEC_TYPE_ADPCM_AGM,
    CODEC_TYPE_ADPCM_ARGO,
    CODEC_TYPE_ADPCM_IMA_SSI,
    CODEC_TYPE_ADPCM_ZORK,
    CODEC_TYPE_ADPCM_IMA_APM,
    CODEC_TYPE_ADPCM_IMA_ALP,
    CODEC_TYPE_ADPCM_IMA_MTF,
    CODEC_TYPE_ADPCM_IMA_CUNNING,
    CODEC_TYPE_ADPCM_IMA_MOFLEX,
    CODEC_TYPE_ADPCM_IMA_ACORN,
    CODEC_TYPE_ADPCM_XMD,
    CODEC_TYPE_AMR_NB,
    CODEC_TYPE_AMR_WB,
    CODEC_TYPE_RA_144,
    CODEC_TYPE_RA_288,
    CODEC_TYPE_ROQ_DPCM,
    CODEC_TYPE_INTERPLAY_DPCM,
    CODEC_TYPE_XAN_DPCM,
    CODEC_TYPE_SOL_DPCM,
    CODEC_TYPE_SDX2_DPCM,
    CODEC_TYPE_GREMLIN_DPCM,
    CODEC_TYPE_DERF_DPCM,
    CODEC_TYPE_WADY_DPCM,
    CODEC_TYPE_CBD2_DPCM,
};

typedef enum codec_type codec_type;

#define CODEC_PROFILE_AAC_LC    2
#define CODEC_PROFILE_AAC_HE    5
#define CODEC_PROFILE_AAC_HE2  29
#define CODEC_PROFILE_AAC_LAYER3  34
#define CODEC_PROFILE_AAC_USAC 42

const char* codec_name(codec_type t);

#endif
